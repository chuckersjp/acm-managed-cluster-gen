---
# tasks file for managed-clusters-role

- name: Set a clustername based on the host run against
  ansible.builtin.set_fact:
   clustername: "{{ inventory_hostname}}"

- name: Create pull-secret Secret
  ansible.builtin.template:
    src: pull-secret.yaml.j2
    dest: ./cluster-manifests/{{ clustername }}-pull-secret
    mode: '0640'

- name: Create ssh key pair Secret
  ansible.builtin.template:
    src: ssh-key.yaml.j2
    dest: ./cluster-manifests/{{ clustername }}-ssh-key
    mode: '0640'

- name: Create managedcluster object
  ansible.builtin.template:
    src: managedcluster.yaml.j2
    dest: ./cluster-manifests/{{ clustername }}-managedcluster
    mode: '0640'

- name: Create a temp file to house the install-config.yaml
  ansible.builtin.tempfile:
    state: file
    prefix: ""
  register: tempInstallConfig

- name: AWS Specific tasks
  block: 
  
    - name: Create install-config.yaml file
      ansible.builtin.template:
        src: aws-install-config.yaml.j2
        dest: "{{ tempInstallConfig.path }}"
        mode: '0600'

    - name: Create aws-creds Secret
      ansible.builtin.template:
        src: aws-creds.yaml.j2
        dest: ./cluster-manifests/{{ clustername }}-aws-creds
        mode: '0640'

    - name: Create AWS clusterdeployment object
      ansible.builtin.template:
        src: aws-clusterdeployment.yaml.j2
        dest: ./cluster-manifests/{{ clustername }}-clusterdeployment
        mode: '0640'

  when: cloud_type == 'aws' 

# end AWS block

- name: vSphere specfic tasks
  block: 
  
    - name: Create install-config.yaml file
      ansible.builtin.template:
        src: vsphere-install-config.yaml.j2
        dest: "{{ tempInstallConfig.path }}"
        mode: '0600'

    - name: Create aws-creds Secret
      ansible.builtin.template:
        src: vsphere-creds.yaml.j2
        dest: ./cluster-manifests/{{ clustername }}-aws-creds
        mode: '0640'

    - name: Create vSphere clusterdeployment object
      ansible.builtin.template:
        src: vs-clusterdeployment.yaml.j2
        dest: ./cluster-manifests/{{ clustername }}-clusterdeployment
        mode: '0640'

  when: cloud_type == 'vsphere' 

# end vSphere block

- name: Encode the install-config.yaml
  ansible.builtin.set_fact:
    encodedInstallConfig: "{{ lookup('ansible.builtin.file', tempInstallConfig.path) | b64encode }}"
  no_log: True

- name: Create install-config Secret
  ansible.builtin.template:
    src: cluster-install-config-secret.yaml.j2
    dest: ./cluster-manifests/{{ clustername }}-install-config
    mode: '0640'

- name: Clean up temp file
  ansible.builtin.file:
    path: "{{ tempInstallConfig.path }}"
    state: absent
  when: tempInstallConfig.path is defined
